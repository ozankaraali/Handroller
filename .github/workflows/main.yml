name: Build and Package App

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Package App with PyInstaller for Linux
        run: |
          pip install pyinstaller
          pyinstaller --onefile -n handroller main.py
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: packaged-app-linux
          path: dist/handroller

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Package App with PyInstaller for Windows
        run: |
          pip install pyinstaller
          pyinstaller --onefile -n handroller main.py
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v2
        with:
          name: packaged-app-windows
          path: dist/handroller.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Package App with PyInstaller for MacOS
        run: |
          pip install pyinstaller
          # Locate the python packages directory
          PACKAGES_PATH=$(python -c "import site; print(site.getsitepackages()[0])")
          # Package the app with PyInstaller
          pyinstaller -n handroller main.py \
          --paths $PACKAGES_PATH/cv2 \
          --paths $PACKAGES_PATH/mediapipe \
          --paths $PACKAGES_PATH/pyautogui

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v2
        with:
          name: packaged-app-macos
          path: dist/handroller.app
          
  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Get shortened SHA
        id: short-sha
        run: |
          echo ${GITHUB_SHA:0:7} > short_sha.txt
          echo "SHORT_SHA=$(cat short_sha.txt)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: release-${{ env.SHORT_SHA }}
          release_name: Release ${{ env.SHORT_SHA }}
          draft: false
          prerelease: false
      - name: Download all artifacts
        uses: actions/download-artifact@v2
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packaged-app-linux/handroller
          asset_name: handroller-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packaged-app-windows/handroller.exe
          asset_name: handroller-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packaged-app-macos/handroller
          asset_name: handroller-macos
          asset_content_type: application/octet-stream
